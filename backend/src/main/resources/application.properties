# Import env variables
spring.config.import=optional:file:.env[.properties]

# Run api on port 8081
server.port=8081

# File sizes
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# Database
spring.datasource.url=jdbc:h2:mem:mydb
spring.datasource.username=admin
spring.datasource.password=myadminpassword
spring.datasource.driver-class-name=org.h2.Driver

spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true

# Authentication
keycloak-base-url=${KEYCLOAK_BASE_URL}
keycloak-realm=${KEYCLOAK_REALM}

keycloak.realm=${KEYCLOAK_REALM}
keycloak.auth-server-url=${KEYCLOAK_BASE_URL}
keycloak.ssl-required=external
keycloak.resource=${KEYCLOAK_CLIENT_ID}
keycloak.credentials.secret=${KEYCLOAK_CLIENT_SECRET}
keycloak.use-resource-role-mappings=true

spring.security.oauth2.client.registration.oauth2-client-credentials.client-id=${KEYCLOAK_CLIENT_ID}
spring.security.oauth2.client.registration.oauth2-client-credentials.client-secret=${KEYCLOAK_CLIENT_SECRET}
spring.security.oauth2.client.registration.oauth2-client-credentials.scope=openid, profile, roles
spring.security.oauth2.client.registration.oauth2-client-credentials.authorization-grant-type=password
spring.security.oauth2.client.registration.oauth2-client-credentials.provider=keycloak

spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_BASE_URL}/realms/${KEYCLOAK_REALM}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_BASE_URL}/auth/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_BASE_URL}/realms/${KEYCLOAK_REALM}