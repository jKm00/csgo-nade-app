create table "public"."team_members" (
    "id" bigint generated by default as identity not null,
    "inserted_at" timestamp with time zone not null default timezone('utc'::text, now()),
    "updated_at" timestamp with time zone not null default timezone('utc'::text, now()),
    "team_id" bigint not null,
    "player_id" bigint not null,
    "role" text
);


alter table "public"."team_members" enable row level security;

create table "public"."teams" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "name" text not null,
    "team_leader" bigint
);


alter table "public"."teams" enable row level security;

CREATE UNIQUE INDEX team_members_pkey ON public.team_members USING btree (id);

CREATE UNIQUE INDEX teams_name_key ON public.teams USING btree (name);

CREATE UNIQUE INDEX teams_pkey ON public.teams USING btree (id);

alter table "public"."team_members" add constraint "team_members_pkey" PRIMARY KEY using index "team_members_pkey";

alter table "public"."teams" add constraint "teams_pkey" PRIMARY KEY using index "teams_pkey";

alter table "public"."team_members" add constraint "fk_player" FOREIGN KEY (player_id) REFERENCES profiles(id) not valid;

alter table "public"."team_members" validate constraint "fk_player";

alter table "public"."team_members" add constraint "fk_team" FOREIGN KEY (team_id) REFERENCES teams(id) not valid;

alter table "public"."team_members" validate constraint "fk_team";

alter table "public"."teams" add constraint "fk_leader" FOREIGN KEY (team_leader) REFERENCES profiles(id) not valid;

alter table "public"."teams" validate constraint "fk_leader";

alter table "public"."teams" add constraint "teams_name_key" UNIQUE using index "teams_name_key";

create policy "Enable insert for authenticated users only"
on "public"."teams"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for all users"
on "public"."teams"
as permissive
for select
to public
using (true);



